{"version":3,"sources":["../../src/App.tsx"],"names":["mockQuestions","question","answerType","identifier","validator","message","value","length","validatorCallback","name","split","options","App","questions","setQuestions","styles","app","description","demo"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\nimport ChatBot, { Question } from './ChatBot';\nimport styles from './App.module.scss';\n\nconst mockQuestions: Question[] = [\n  {\n    question: () => 'Hello, My name is Bot K3V, I will help you apply for the role. What is your name',\n    answerType: 'input',\n    identifier: 'name',\n    validator: {\n      message: (value) =>\n        `${\n          value.length < 5 ? 'Your name cannot be that short' : 'Your name cannot be definitely that long'\n        }. \\n\\nYour name length should range between 5 - 26 characters`,\n      validatorCallback: (value) => value.length > 4 && value.length < 27,\n    },\n  },\n  {\n    question: ({ name }) => {\n      return `Nice to meet you ${name}. \\n\\nI will take you this process which should take you at most 5 minutes.\\n\\nPlease upload your resume below we will use for reference when you come for the in house interview`;\n    },\n    answerType: 'file',\n    identifier: 'resume',\n  },\n  {\n    question: ({ name = '' }) =>\n      `Great ${name.split(' ')[0]}. \\n\\nIn less than 100 words, tell me about yourself. \\n\\nWho is ${\n        name.split(' ')[0]\n      }?`,\n    answerType: 'paragraph',\n    identifier: 'overview',\n    validator: {\n      validatorCallback: (value = '') => value.split(' ').length < 100,\n      message: () => `Sorry, your information is TL;DR. Please keep it less than 100 words`,\n    },\n  },\n  {\n    question: () =>\n      'Nice!. Which of the skills below identify with you? \\n\\nYou should have at least one of the skills to proceed',\n    answerType: 'select',\n    identifier: 'skills',\n    options: ['HTML', 'CSS', 'Javascript', 'NodeJS', 'Typescript'],\n    validator: {\n      validatorCallback: (value) => value.length > 0,\n      message: () => `You ought to have at least one skill to proceed`,\n    },\n  },\n  {\n    question: () =>\n      'Which other skill not mentioned above do you have? \\n\\nIf None, just type None. \\n\\nIf more than one, list them as comma separated values.',\n    answerType: 'csv',\n    identifier: 'otherSkills',\n  },\n  {\n    question: () => 'Where do you live. Tell me the name of your nearest City.',\n    answerType: 'input',\n    identifier: 'city',\n  },\n  {\n    question: ({ name }) => `How old are you ${name}?`,\n    answerType: 'number',\n    identifier: 'age',\n  },\n  {\n    question: () =>\n      'Send me your mobile number. I will use it to contact you in case I need further information from you',\n    answerType: 'input',\n    identifier: 'mobile',\n  },\n];\nconst App: FC<{}> = () => {\n  const [questions, setQuestions] = useState(mockQuestions);\n  return (\n    <div className={styles.app}>\n      <div className={styles.description}>\n        <span>This is a demo for</span>\n        <a href=\"https://www.npmjs.com/package/chat-form\">chat-form</a>\n      </div>\n      <div className={styles.description}>\n        <span>View source code in</span>\n        <a href=\"https://github.com/koechkevin/chat-form/blob/master/src/App.tsx\">github</a>\n      </div>\n      <div>\n        <ChatBot\n          lastMessage={({ name = '' }) =>\n            `Thank you ${name}. I will get back to you through the information you shared.`\n          }\n          onAnswer={setQuestions}\n          questions={questions}\n          className={styles.demo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"file":"App.js"}