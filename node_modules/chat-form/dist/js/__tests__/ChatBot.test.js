"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ChatBot = _interopRequireDefault(require("../ChatBot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var questions = [{
  question: function question() {
    return 'First Question';
  },
  answerType: 'input',
  identifier: 'name',
  validator: {
    message: function message() {
      return "Your name length should range between 5 - 26 characters";
    },
    validatorCallback: jest.fn()
  }
}];
test('chat bot render', function () {
  var onAnswer = jest.fn();

  var lastMessage = function lastMessage() {
    return 'Last Message';
  };

  var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_ChatBot.default, {
    questions: questions,
    onAnswer: onAnswer,
    lastMessage: lastMessage
  })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;

  var closeBtn = getByText(/×/i);
  expect(closeBtn).toBeInTheDocument();
  closeBtn.click();
  var openButton = getByTestId('open');
  openButton.click();
});
test('test', function () {
  var onAnswer = jest.fn();

  var lastMessage = function lastMessage() {
    return 'Last Message';
  };

  var initialMessages = [{
    message: 'Some Random Text',
    time: '',
    sender: 'user'
  }, {
    message: 'Some File',
    fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',
    time: '',
    sender: 'user',
    file: new File(['(⌐□_□)'], 'chuck.pdf', {
      type: 'application/pdf'
    })
  }, {
    message: 'initial two',
    fileSrc: 'https://res.cloudinary.com/koech/image/upload/v1584434425/aoqxvjkdstv7fencxvok.png',
    time: '',
    sender: 'bot',
    file: new File(['(⌐□_□)'], 'chuck.png', {
      type: 'image/png'
    })
  }, {
    message: 'Some File',
    fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',
    time: '',
    sender: 'user',
    file: new File(['(⌐□_□)'], 'chuck.mp4', {
      type: 'video/mp4'
    })
  }];

  var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_ChatBot.default, {
    initialMessages: initialMessages,
    questions: [],
    onAnswer: onAnswer,
    lastMessage: lastMessage
  })),
      getByText = _render2.getByText;

  var message = getByText('initial two');
  expect(message).toBeInTheDocument();
});
//# sourceMappingURL=ChatBot.test.js.map