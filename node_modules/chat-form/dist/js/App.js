"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ChatBot = _interopRequireDefault(require("./ChatBot"));

var _AppModule = _interopRequireDefault(require("./App.module.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var mockQuestions = [{
  question: function question() {
    return 'Hello, My name is Bot K3V, I will help you apply for the role. What is your name';
  },
  answerType: 'input',
  identifier: 'name',
  validator: {
    message: function message(value) {
      return "".concat(value.length < 5 ? 'Your name cannot be that short' : 'Your name cannot be definitely that long', ". \n\nYour name length should range between 5 - 26 characters");
    },
    validatorCallback: function validatorCallback(value) {
      return value.length > 4 && value.length < 27;
    }
  }
}, {
  question: function question(_ref) {
    var name = _ref.name;
    return "Nice to meet you ".concat(name, ". \n\nI will take you this process which should take you at most 5 minutes.\n\nPlease upload your resume below we will use for reference when you come for the in house interview");
  },
  answerType: 'file',
  identifier: 'resume'
}, {
  question: function question(_ref2) {
    var _ref2$name = _ref2.name,
        name = _ref2$name === void 0 ? '' : _ref2$name;
    return "Great ".concat(name.split(' ')[0], ". \n\nIn less than 100 words, tell me about yourself. \n\nWho is ").concat(name.split(' ')[0], "?");
  },
  answerType: 'paragraph',
  identifier: 'overview',
  validator: {
    validatorCallback: function validatorCallback() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      return value.split(' ').length < 100;
    },
    message: function message() {
      return "Sorry, your information is TL;DR. Please keep it less than 100 words";
    }
  }
}, {
  question: function question() {
    return 'Nice!. Which of the skills below identify with you? \n\nYou should have at least one of the skills to proceed';
  },
  answerType: 'select',
  identifier: 'skills',
  options: ['HTML', 'CSS', 'Javascript', 'NodeJS', 'Typescript'],
  validator: {
    validatorCallback: function validatorCallback(value) {
      return value.length > 0;
    },
    message: function message() {
      return "You ought to have at least one skill to proceed";
    }
  }
}, {
  question: function question() {
    return 'Which other skill not mentioned above do you have? \n\nIf None, just type None. \n\nIf more than one, list them as comma separated values.';
  },
  answerType: 'csv',
  identifier: 'otherSkills'
}, {
  question: function question() {
    return 'Where do you live. Tell me the name of your nearest City.';
  },
  answerType: 'input',
  identifier: 'city'
}, {
  question: function question(_ref3) {
    var name = _ref3.name;
    return "How old are you ".concat(name, "?");
  },
  answerType: 'number',
  identifier: 'age'
}, {
  question: function question() {
    return 'Send me your mobile number. I will use it to contact you in case I need further information from you';
  },
  answerType: 'input',
  identifier: 'mobile'
}];

var App = function App() {
  var _useState = (0, _react.useState)(mockQuestions),
      _useState2 = _slicedToArray(_useState, 2),
      questions = _useState2[0],
      setQuestions = _useState2[1];

  return /*#__PURE__*/_react.default.createElement("div", {
    className: _AppModule.default.app
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _AppModule.default.description
  }, /*#__PURE__*/_react.default.createElement("span", null, "This is a demo for"), /*#__PURE__*/_react.default.createElement("a", {
    href: "https://www.npmjs.com/package/chat-form"
  }, "chat-form")), /*#__PURE__*/_react.default.createElement("div", {
    className: _AppModule.default.description
  }, /*#__PURE__*/_react.default.createElement("span", null, "View source code in"), /*#__PURE__*/_react.default.createElement("a", {
    href: "https://github.com/koechkevin/chat-form/blob/master/src/App.tsx"
  }, "github")), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_ChatBot.default, {
    lastMessage: function lastMessage(_ref4) {
      var _ref4$name = _ref4.name,
          name = _ref4$name === void 0 ? '' : _ref4$name;
      return "Thank you ".concat(name, ". I will get back to you through the information you shared.");
    },
    onAnswer: setQuestions,
    questions: questions,
    className: _AppModule.default.demo
  })));
};

var _default = App;
exports.default = _default;
//# sourceMappingURL=App.js.map