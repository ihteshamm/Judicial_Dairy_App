{"version":3,"sources":["../../src/Message.tsx"],"names":["React","useEffect","useState","styles","description","MessageView","props","message","formattedTime","setFormatedTime","then","default","moment","time","format","minHeight","canClick","sender","botText","inputText","text","join","fileSrc","includes","file","type","attachment","image","fileName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAWA,MAAMC,WAAwB,GAAIC,KAAD,IAAW;AAC1C,QAAMC,OAAO,GAAGD,KAAhB;AACA,QAAM,CAACE,aAAD,EAAgBC,eAAhB,IAAmCP,QAAQ,CAAS,EAAT,CAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,OAAP,EAAgBS,IAAhB,CAAqB,CAAC;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAAD,KAAyB;AAC5CH,MAAAA,eAAe,CAACG,MAAM,CAACL,OAAO,CAACM,IAAT,CAAN,CAAqBC,MAArB,CAA4B,OAA5B,CAAD,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,CAACP,OAAO,CAACM,IAAT,CAJM,CAAT;AAMA,sBACE;AAAK,mBAAY,SAAjB;AAA2B,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb;AAAlC,kBACE;AACE,IAAA,OAAO,EAAER,OAAO,CAACS,QADnB;AAEE,IAAA,SAAS,EAAE,CAACT,OAAO,CAACU,MAAR,KAAmB,KAAnB,GAA2Bd,MAAM,CAACe,OAAlC,GAA4Cf,MAAM,CAACgB,SAApD,EAA+DhB,MAAM,CAACiB,IAAtE,EAA4EC,IAA5E,CAAiF,GAAjF;AAFb,KAIGd,OAAO,CAACA,OAAR,iBAAmB,kCAAOA,OAAO,CAACA,OAAf,CAJtB,EAKGA,OAAO,CAACe,OAAR,iBACC,0CACG,CAAC,WAAD,EAAc,WAAd,EAA2BC,QAA3B,CAAoChB,OAAO,EAAEiB,IAAT,EAAeC,IAAf,IAAuB,EAA3D,kBAAkE;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAElB,OAAO,CAACe;AAAzB,IADrE,EAEG,CAAC,WAAD,EAAcC,QAAd,CAAuBhB,OAAO,EAAEiB,IAAT,EAAeC,IAAf,IAAuB,EAA9C,kBAAqD;AAAO,IAAA,GAAG,EAAElB,OAAO,CAACe;AAApB,IAFxD,EAGG,CAAC,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwCC,QAAxC,CAAiDhB,OAAO,EAAEiB,IAAT,EAAeC,IAAf,IAAuB,EAAxE,CAAD,iBACC;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAvB,kBACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB;AAAvB,kBACE;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAEvB;AAAjB,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACyB;AAAvB,KAAkCrB,OAAO,EAAEiB,IAAT,EAAeK,IAAjD,CAJF,CAJJ,CANJ,eAmBE;AAAM,IAAA,SAAS,EAAE1B,MAAM,CAACU;AAAxB,KAA+BL,aAA/B,CAnBF,CADF,eAsBE,+BAtBF,CADF;AA0BD,CApCD;;;AARED,EAAAA,O;AACAU,EAAAA,M,aAAQ,K,EAAQ,M;AAChBJ,EAAAA,I;AACAG,EAAAA,Q;AACAM,EAAAA,O;;AA0CF,eAAejB,WAAf","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport styles from './App.module.scss';\nimport description from './assets/description.svg';\n\nexport interface Message {\n  message: string;\n  sender: 'bot' | 'user';\n  time?: string;\n  canClick?: () => void;\n  fileSrc?: string;\n  file?: File;\n}\n\nconst MessageView: FC<Message> = (props) => {\n  const message = props;\n  const [formattedTime, setFormatedTime] = useState<string>('');\n\n  useEffect(() => {\n    import('dayjs').then(({ default: moment }) => {\n      setFormatedTime(moment(message.time).format('HH:mm'));\n    })\n  }, [message.time]);\n\n  return (\n    <div data-testid=\"message\" style={{ minHeight: 32 }}>\n      <div\n        onClick={message.canClick}\n        className={[message.sender === 'bot' ? styles.botText : styles.inputText, styles.text].join(' ')}\n      >\n        {message.message && <span>{message.message}</span>}\n        {message.fileSrc && (\n          <>\n            {['image/png', 'image/jpg'].includes(message?.file?.type || '') && <img alt=\"\" src={message.fileSrc} />}\n            {['video/mp4'].includes(message?.file?.type || '') && <video src={message.fileSrc} />}\n            {!['video/mp4', 'image/png', 'image/jpg'].includes(message?.file?.type || '') && (\n              <div className={styles.attachment}>\n                <div className={styles.image}>\n                  <img alt=\"\" src={description} />\n                </div>\n                <div className={styles.fileName}>{message?.file?.name}</div>\n              </div>\n            )}\n          </>\n        )}\n        <span className={styles.time}>{formattedTime}</span>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default MessageView\n"],"file":"Message.js"}