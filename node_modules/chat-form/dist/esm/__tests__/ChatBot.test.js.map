{"version":3,"sources":["../../../src/__tests__/ChatBot.test.tsx"],"names":["React","render","ChatBot","questions","question","answerType","identifier","validator","message","validatorCallback","jest","fn","test","onAnswer","lastMessage","getByText","getByTestId","closeBtn","expect","toBeInTheDocument","click","openButton","initialMessages","time","sender","fileSrc","file","File","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react';\nimport ChatBot from '../ChatBot';\n\nconst questions = [\n  {\n    question: () => 'First Question',\n    answerType: 'input',\n    identifier: 'name',\n    validator: {\n      message: () => `Your name length should range between 5 - 26 characters`,\n      validatorCallback: jest.fn(),\n    },\n  },\n];\n\ntest('chat bot render', () => {\n  const onAnswer = jest.fn();\n  const lastMessage = () => 'Last Message';\n  const { getByText, getByTestId } = render(\n    <ChatBot questions={questions} onAnswer={onAnswer} lastMessage={lastMessage} />,\n  );\n  const closeBtn = getByText(/×/i);\n  expect(closeBtn).toBeInTheDocument();\n  closeBtn.click();\n  const openButton = getByTestId('open');\n  openButton.click();\n});\n\ntest('test', () => {\n  const onAnswer = jest.fn();\n  const lastMessage = () => 'Last Message';\n  const initialMessages = [\n    { message: 'Some Random Text', time: '', sender: 'user' as 'user' },\n    {\n      message: 'Some File',\n      fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',\n      time: '',\n      sender: 'user' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.pdf', { type: 'application/pdf' }),\n    },\n    {\n      message: 'initial two',\n      fileSrc: 'https://res.cloudinary.com/koech/image/upload/v1584434425/aoqxvjkdstv7fencxvok.png',\n      time: '',\n      sender: 'bot' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.png', { type: 'image/png' }),\n    },\n    {\n      message: 'Some File',\n      fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',\n      time: '',\n      sender: 'user' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.mp4', { type: 'video/mp4' }),\n    },\n  ];\n  const { getByText } = render(\n    <ChatBot initialMessages={initialMessages} questions={[]} onAnswer={onAnswer} lastMessage={lastMessage} />,\n  );\n  const message = getByText('initial two');\n  expect(message).toBeInTheDocument();\n});\n"],"file":"ChatBot.test.js"}