import _pt from "prop-types";
import React, { useState } from 'react';
import styles from './App.module.scss';

const Options = props => {
  const {
    options,
    onSelect,
    selected,
    onFinish
  } = props;
  const [search, setSearch] = useState('');

  const onSearch = e => {
    e.persist();
    setSearch(e.target.value);
  };

  return /*#__PURE__*/React.createElement("div", {
    className: styles.options
  }, /*#__PURE__*/React.createElement("input", {
    style: {
      backgroundColor: '#fff',
      width: '100%',
      marginBottom: 16,
      height: 24
    },
    className: styles.input,
    onChange: onSearch,
    placeholder: "Search"
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      maxHeight: 160,
      overflowY: 'scroll'
    }
  }, options.filter(option => option.toLowerCase().includes(search.toLowerCase())).map(option => /*#__PURE__*/React.createElement("div", {
    key: option
  }, /*#__PURE__*/React.createElement("button", {
    onClick: () => onSelect(option),
    className: [styles.option, selected.includes(option) ? styles.selected : ''].join(' ')
  }, option)))), /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'flex-end'
    }
  }, /*#__PURE__*/React.createElement("button", {
    onClick: onFinish,
    className: styles.finish
  }, "Finish")));
};

Options.propTypes = {
  options: _pt.arrayOf(_pt.string).isRequired,
  onSelect: _pt.func.isRequired,
  onFinish: _pt.func.isRequired,
  selected: _pt.arrayOf(_pt.string).isRequired
};
export default Options;
//# sourceMappingURL=Options.js.map