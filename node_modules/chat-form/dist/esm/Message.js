import _pt from "prop-types";
import React, { useEffect, useState } from 'react';
import styles from './App.module.scss';
import description from './assets/description.svg';

const MessageView = props => {
  const message = props;
  const [formattedTime, setFormatedTime] = useState('');
  useEffect(() => {
    import('dayjs').then(({
      default: moment
    }) => {
      setFormatedTime(moment(message.time).format('HH:mm'));
    });
  }, [message.time]);
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": "message",
    style: {
      minHeight: 32
    }
  }, /*#__PURE__*/React.createElement("div", {
    onClick: message.canClick,
    className: [message.sender === 'bot' ? styles.botText : styles.inputText, styles.text].join(' ')
  }, message.message && /*#__PURE__*/React.createElement("span", null, message.message), message.fileSrc && /*#__PURE__*/React.createElement(React.Fragment, null, ['image/png', 'image/jpg'].includes(message?.file?.type || '') && /*#__PURE__*/React.createElement("img", {
    alt: "",
    src: message.fileSrc
  }), ['video/mp4'].includes(message?.file?.type || '') && /*#__PURE__*/React.createElement("video", {
    src: message.fileSrc
  }), !['video/mp4', 'image/png', 'image/jpg'].includes(message?.file?.type || '') && /*#__PURE__*/React.createElement("div", {
    className: styles.attachment
  }, /*#__PURE__*/React.createElement("div", {
    className: styles.image
  }, /*#__PURE__*/React.createElement("img", {
    alt: "",
    src: description
  })), /*#__PURE__*/React.createElement("div", {
    className: styles.fileName
  }, message?.file?.name))), /*#__PURE__*/React.createElement("span", {
    className: styles.time
  }, formattedTime)), /*#__PURE__*/React.createElement("br", null));
};

MessageView.propTypes = {
  message: _pt.string.isRequired,
  sender: _pt.oneOf(['bot', 'user']).isRequired,
  time: _pt.string,
  canClick: _pt.func,
  fileSrc: _pt.string
};
export default MessageView;
//# sourceMappingURL=Message.js.map