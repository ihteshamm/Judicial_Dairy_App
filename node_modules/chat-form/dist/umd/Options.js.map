{"version":3,"sources":["../../src/Options.tsx"],"names":["options","onSelect","onFinish","selected","Options","props","useState","onSearch","e","setSearch","styles","backgroundColor","width","marginBottom","height","maxHeight","overflowY","option","search","display","justifyContent","finish"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,QAAMI,OAAkB,GAAIC,KAAD,IAAW;AACpC,UAAM;AAAA,MAAA,OAAA;AAAA,MAAA,QAAA;AAAA,MAAA,QAAA;AAA+BH,MAAAA;AAA/B,QAAN,KAAA;AACA,UAAM,CAAA,MAAA,EAAA,SAAA,IAAsBI,qBAA5B,EAA4BA,CAA5B;;AACA,UAAMC,QAAQ,GAAIC,CAAD,IAA4C;AAC3DA,MAAAA,CAAC,CAADA,OAAAA;AACAC,MAAAA,SAAS,CAACD,CAAC,CAADA,MAAAA,CAAVC,KAAS,CAATA;AAFF,KAAA;;AAIA,WAAA,aACE,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAEC,oBAAOV;AAAvB,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,OAAA,EAAA;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,eAAe,EAAjB,MAAA;AAA2BC,QAAAA,KAAK,EAAhC,MAAA;AAA0CC,QAAAA,YAAY,EAAtD,EAAA;AAA4DC,QAAAA,MAAM,EAAE;AAApE,OADT;AAEE,MAAA,SAAS,EAAEJ,oBAFb,KAAA;AAGE,MAAA,QAAQ,EAHV,QAAA;AAIE,MAAA,WAAW,EAAC;AAJd,KAAA,CADF,EAAA,aAOE,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAX,GAAA;AAAkBC,QAAAA,SAAS,EAAE;AAA7B;AAAZ,KAAA,EACGhB,OAAO,CAAPA,MAAAA,CACUiB,MAAD,IAAoBA,MAAM,CAANA,WAAAA,GAAAA,QAAAA,CAA8BC,MAAM,CADjElB,WAC2DkB,EAA9BD,CAD7BjB,EAAAA,GAAAA,CAEOiB,MAAD,IAAA,aACH,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAEA;AAAV,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,OAAO,EAAE,MAAMhB,QAAQ,CADzB,MACyB,CADzB;AAEE,MAAA,SAAS,EAAE,CAACS,oBAAD,MAAA,EAAgBP,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,IAA4BO,oBAA5BP,QAAAA,GAAhB,EAAA,EAAA,IAAA,CAAA,GAAA;AAFb,KAAA,EAZV,MAYU,CADF,CAHHH,CADH,CAPF,EAAA,aAqBE,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAT,MAAA;AAAmBC,QAAAA,cAAc,EAAE;AAAnC;AAAZ,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,OAAO,EAAf,QAAA;AAA2B,MAAA,SAAS,EAAEV,oBAAOW;AAA7C,KAAA,EAvBN,QAuBM,CADF,CArBF,CADF;AAPF,GAAA;;;AALErB,IAAAA,O;AACAC,IAAAA,Q;AACAC,IAAAA,Q;AACAC,IAAAA,Q;;oBAwCF,O","sourcesContent":["import React, { ChangeEvent, FC, useState } from 'react';\nimport styles from './App.module.scss';\n\ninterface Props {\n  options: string[];\n  onSelect: (option: string) => void;\n  onFinish: () => void;\n  selected: string[];\n}\nconst Options: FC<Props> = (props) => {\n  const { options, onSelect, selected, onFinish } = props;\n  const [search, setSearch] = useState('');\n  const onSearch = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.persist();\n    setSearch(e.target.value);\n  };\n  return (\n    <div className={styles.options}>\n      <input\n        style={{ backgroundColor: '#fff', width: '100%', marginBottom: 16, height: 24 }}\n        className={styles.input}\n        onChange={onSearch}\n        placeholder=\"Search\"\n      />\n      <div style={{ maxHeight: 160, overflowY: 'scroll' }}>\n        {options\n          .filter((option: string) => option.toLowerCase().includes(search.toLowerCase()))\n          .map((option: string) => (\n            <div key={option}>\n              <button\n                onClick={() => onSelect(option)}\n                className={[styles.option, selected.includes(option) ? styles.selected : ''].join(' ')}\n              >\n                {option}\n              </button>\n            </div>\n          ))}\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <button onClick={onFinish} className={styles.finish}>\n          Finish\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n"],"file":"Options.js"}