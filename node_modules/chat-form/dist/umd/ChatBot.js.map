{"version":3,"sources":["../../src/ChatBot.tsx"],"names":["className","lastMessage","questions","onAnswer","initialMessages","message","validatorCallback","question","answerType","identifier","answer","answered","options","fileSrc","validator","ChatBot","props","useState","updateQuestionsWithAnswers","val","currentQuestion","setKeyValue","value","each","onChange","e","setValue","onSelect","select","index","selected","setSelected","i","onSend","setIdleTime","time","moment","setChatList","sender","validatorCallBack","setTyping","setTimeout","onFinish","setCurrentQuestion","onEnter","useEffect","unansweredQuestion","list","document","chatList","interval","setInterval","clearInterval","idleTime","setOpen","src","onSelectFile","file","setFile","onChangeFile","reader","result","styles","height","open","width","transition","chatBody","header","botLogo","display","fontWeight","marginTop","typing","close","body","preview","attachment","description","fileName","footer","input","element","flex","send","button","icon"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FC, KeyboardEvent, useEffect, useState } from 'react';\nimport styles from './App.module.scss';\nimport icon from './assets/icon.svg';\nimport send from './assets/send.svg';\nimport description from './assets/description.svg';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport MessageView, { Message } from './Message';\nimport Options from './Options';\nimport moment from 'dayjs';\n\nexport interface Props {\n  className?: string;\n  lastMessage: (value: any) => string;\n  questions: Question[];\n  onAnswer: (questions: Question[], value?: any) => void;\n  initialMessages?: Message[];\n}\n\nexport interface ValidatorObject {\n  message: (value: any) => string;\n  validatorCallback: (value: any) => boolean;\n}\n\nexport interface Question {\n  question: (value: any) => string;\n  answerType: 'paragraph' | 'input' | 'boolean' | 'select' | 'file' | 'number' | 'csv' | any;\n  identifier: string;\n  answer?: string | boolean | number | any;\n  answered?: boolean;\n  options?: string[];\n  fileSrc?: string;\n  validator?: ValidatorObject;\n}\n\nconst ChatBot: FC<Props> = (props) => {\n  const { className, questions, lastMessage, onAnswer, initialMessages = [] } = props;\n\n  const [idleTime, setIdleTime] = useState<number>(0);\n\n  const [keyValue, setKeyValue] = useState<any>({});\n\n  const [currentQuestion, setCurrentQuestion] = useState<Question>();\n\n  const updateQuestionsWithAnswers = (answer: any): void => {\n    const val = currentQuestion && { ...keyValue, [currentQuestion.identifier]: answer };\n    if (val) {\n      setKeyValue(val);\n    }\n\n    const value = questions.map((each) =>\n      each.identifier === currentQuestion?.identifier\n        ? {\n            ...each,\n            answered: true,\n            answer,\n          }\n        : each,\n    );\n    onAnswer(value, val);\n  };\n  const [open, setOpen] = useState<boolean>(true);\n  const [value, setValue] = useState<string>('');\n\n  const [chatList, setChatList] = useState<Message[]>(initialMessages);\n\n  const [typing, setTyping] = useState<boolean>(false);\n  const onChange = (e: any) => {\n    e.persist();\n    setValue(e.target.value);\n  };\n\n  const [selected, setSelected] = useState<string[]>([]);\n\n  const onSelect = (select: string) => {\n    const index = selected.findIndex((val: string) => val === select);\n    if (index !== -1) {\n      return setSelected((val) => val.filter((e, i) => i !== index));\n    }\n    setSelected((val) => [...val, select]);\n  };\n\n  const onSend = (): void => {\n    setIdleTime(0);\n    if (value) {\n      const time = moment().format();\n      setChatList((val) => [...val, { message: value, sender: 'user', time }]);\n      const answer = currentQuestion?.answerType === 'csv' ? value.split(',') : value;\n      if (currentQuestion?.validator) {\n        const validatorCallBack = currentQuestion?.validator?.validatorCallback;\n        if (validatorCallBack && !validatorCallBack(answer)) {\n          setTyping(true);\n          setTimeout(() => {\n            setChatList((val) => [\n              ...val,\n              { message: currentQuestion?.validator?.message(value) || '', sender: 'bot', time },\n            ]);\n            setTyping(false);\n          }, 1000);\n          return;\n        }\n      }\n      updateQuestionsWithAnswers(answer);\n      setValue('');\n      return;\n    }\n  };\n\n  const onFinish = () => {\n    setIdleTime(0);\n    const time = moment().format();\n    const message = !selected.length ? `My ${currentQuestion?.identifier} not listed` : ` - ${selected.join(`\\n - `)}`;\n\n    setChatList((val) => [...val, { message, sender: 'user', time }]);\n    if (currentQuestion?.validator) {\n      const validatorCallBack = currentQuestion?.validator?.validatorCallback;\n      if (validatorCallBack && !validatorCallBack(selected)) {\n        return setChatList((val) => [\n          ...val,\n          { message: currentQuestion?.validator?.message(selected) || '', sender: 'bot', time },\n        ]);\n      }\n    }\n    setCurrentQuestion(undefined);\n    updateQuestionsWithAnswers(selected);\n    setSelected([]);\n  };\n\n  const onEnter = (e: KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (e.charCode === 13 && value && !e.shiftKey) {\n      onSend();\n    }\n  };\n\n  useEffect(() => {\n    setTyping(true);\n    setTimeout(() => {\n      const time = moment().format();\n      const sender = 'bot';\n      const unansweredQuestion = questions.find((question) => !question.answered);\n      setCurrentQuestion(unansweredQuestion);\n      if (unansweredQuestion) {\n        const message = unansweredQuestion.question(keyValue);\n        setChatList((val) => [...val, { message, sender, time }]);\n      } else {\n        const message = lastMessage(keyValue);\n        setChatList((val) => [...val, { message, sender, time }]);\n      }\n      setTyping(false);\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questions]);\n\n  useEffect(() => {\n    const list = document.getElementById('chat-list-body') as HTMLDivElement;\n    if (list) {\n      list.scrollTop = list.scrollHeight;\n    }\n  }, [chatList.length]);\n\n  useEffect(() => {\n    if (open) {\n      const interval = setInterval(() => {\n        setIdleTime((val) => val + 1);\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n        setIdleTime(0);\n      };\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (idleTime >= 300) {\n      setOpen(false);\n    }\n  }, [idleTime, currentQuestion]);\n\n  const [, setRef] = useState<HTMLInputElement | null>(null);\n  const [file, setFile] = useState<{ src: any; file?: any }>({ src: '' });\n  const onSelectFile = () => {\n    const time = moment().format();\n    setChatList((val) => [...val, { message: value, fileSrc: file.src, sender: 'user', time, file: file.file }]);\n    updateQuestionsWithAnswers(file);\n    setFile((val) => ({ ...val, src: '' }));\n  };\n\n  const onChangeFile = (e: ChangeEvent<HTMLInputElement>) => {\n    const file: any = e.target.files && (e.target.files[0] as Blob);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setFile({ file, src: reader.result });\n    };\n  };\n\n  return (\n    <span className={[styles.chatBot, className].join(' ')}>\n      <div\n        style={{ height: open ? 600 : 0, width: open ? 320 : 0, transition: `height ${open ? 800 : 0}ms ease-out` }}\n        className={styles.chatBody}\n      >\n        <div className={styles.header}>\n          <div className={styles.botLogo}>BOT</div>\n          <div className={styles.display}>\n            <div style={{ fontWeight: 'bold' }}>Chat Assistant</div>\n            <div style={{ marginTop: 4 }}>{typing ? 'typing...' : 'online'}</div>\n          </div>\n          <button onClick={() => setOpen(false)} aria-label=\"close\" className={styles.close}>\n            &times;\n          </button>\n        </div>\n        <div id=\"chat-list-body\" className={styles.body}>\n          {chatList.map((message: Message, index: number) => (\n            <MessageView key={index} {...message} />\n          ))}\n          {currentQuestion?.options && (\n            <Options onFinish={onFinish} options={currentQuestion.options} onSelect={onSelect} selected={selected} />\n          )}\n        </div>\n        {idleTime > 240 && (\n          <div\n            onClick={() => setIdleTime(0)}\n            className={styles.keepAlive}\n            role=\"button\"\n            aria-label=\"keep open\"\n          >{`Chat assistant will close in ${300 - idleTime} seconds. Click here to keep alive`}</div>\n        )}\n        {file.src && (\n          <div className={styles.preview}>\n            {['image/png', 'image/jpg'].includes(file.file.type) && <img alt=\"\" src={file.src} />}\n            {['video/mp4'].includes(file.file.type) && <video src={file.src} />}\n            {!['video/mp4', 'image/png', 'image/jpg'].includes(file?.file?.type || '') && (\n              <div className={styles.attachment}>\n                <img alt=\"\" src={description} />\n                <div className={styles.fileName}>{file?.file?.name}</div>\n              </div>\n            )}\n          </div>\n        )}\n        {currentQuestion && (\n          <div className={styles.footer}>\n            {['input', 'csv', 'number'].includes(currentQuestion.answerType) && (\n              <input\n                placeholder=\"Jot something down\"\n                onKeyPress={onEnter}\n                onChange={onChange}\n                value={value}\n                type={currentQuestion.answerType === 'number' ? 'number' : 'text'}\n                className={styles.input}\n              />\n            )}\n            {['paragraph'].includes(currentQuestion.answerType) && (\n              <TextareaAutosize\n                onKeyPress={onEnter}\n                placeholder=\"Jot something down\"\n                onChange={onChange}\n                value={value}\n                maxRows={6}\n                className={styles.input}\n              />\n            )}\n            {currentQuestion.answerType === 'file' && (\n              <div\n                className={styles.uploader}\n                role=\"button\"\n                onClick={() => {\n                  const element = document.getElementById('file-id') as HTMLInputElement;\n                  element && element.click();\n                }}\n                style={{ flex: 1 }}\n                id=\"file-upload-id\"\n              >\n                Upload a file\n                <input\n                  accept={'.pdf,.doc,.png,.jpg,.docx,.mp4,.mov'}\n                  ref={setRef}\n                  onChange={onChangeFile}\n                  style={{ display: 'none' }}\n                  id=\"file-id\"\n                  type=\"file\"\n                />\n              </div>\n            )}\n            {currentQuestion.answerType !== 'select' && (\n              <img\n                role=\"button\"\n                onClick={currentQuestion.answerType === 'file' ? onSelectFile : onSend}\n                className={styles.icon}\n                alt=\"\"\n                src={send}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {!open && (\n        <div\n          tabIndex={0}\n          data-testid=\"open\"\n          role=\"button\"\n          onClick={() => setOpen(true)}\n          aria-label=\"send message\"\n          className={styles.button}\n        >\n          <img alt=\"\" src={icon} />\n        </div>\n      )}\n    </span>\n  );\n};\n\nexport default ChatBot;\n"],"file":"ChatBot.js"}