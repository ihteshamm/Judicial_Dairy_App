{"version":3,"sources":["../../../src/__tests__/ChatBot.test.tsx"],"names":["questions","question","answerType","identifier","validator","message","validatorCallback","jest","test","onAnswer","lastMessage","getByTestId","render","closeBtn","getByText","expect","openButton","initialMessages","time","sender","fileSrc","file","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react';\nimport ChatBot from '../ChatBot';\n\nconst questions = [\n  {\n    question: () => 'First Question',\n    answerType: 'input',\n    identifier: 'name',\n    validator: {\n      message: () => `Your name length should range between 5 - 26 characters`,\n      validatorCallback: jest.fn(),\n    },\n  },\n];\n\ntest('chat bot render', () => {\n  const onAnswer = jest.fn();\n  const lastMessage = () => 'Last Message';\n  const { getByText, getByTestId } = render(\n    <ChatBot questions={questions} onAnswer={onAnswer} lastMessage={lastMessage} />,\n  );\n  const closeBtn = getByText(/×/i);\n  expect(closeBtn).toBeInTheDocument();\n  closeBtn.click();\n  const openButton = getByTestId('open');\n  openButton.click();\n});\n\ntest('test', () => {\n  const onAnswer = jest.fn();\n  const lastMessage = () => 'Last Message';\n  const initialMessages = [\n    { message: 'Some Random Text', time: '', sender: 'user' as 'user' },\n    {\n      message: 'Some File',\n      fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',\n      time: '',\n      sender: 'user' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.pdf', { type: 'application/pdf' }),\n    },\n    {\n      message: 'initial two',\n      fileSrc: 'https://res.cloudinary.com/koech/image/upload/v1584434425/aoqxvjkdstv7fencxvok.png',\n      time: '',\n      sender: 'bot' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.png', { type: 'image/png' }),\n    },\n    {\n      message: 'Some File',\n      fileSrc: 'https://www.youtube.com/watch?v=Dr-apUEc-7o',\n      time: '',\n      sender: 'user' as 'user',\n      file: new File(['(⌐□_□)'], 'chuck.mp4', { type: 'video/mp4' }),\n    },\n  ];\n  const { getByText } = render(\n    <ChatBot initialMessages={initialMessages} questions={[]} onAnswer={onAnswer} lastMessage={lastMessage} />,\n  );\n  const message = getByText('initial two');\n  expect(message).toBeInTheDocument();\n});\n"],"file":"ChatBot.test.js"}