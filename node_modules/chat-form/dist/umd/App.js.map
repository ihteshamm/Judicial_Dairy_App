{"version":3,"sources":["../../src/App.tsx"],"names":["mockQuestions","question","answerType","identifier","validator","message","value","validatorCallback","name","options","App","useState","styles","app","description","demo"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\nimport ChatBot, { Question } from './ChatBot';\nimport styles from './App.module.scss';\n\nconst mockQuestions: Question[] = [\n  {\n    question: () => 'Hello, My name is Bot K3V, I will help you apply for the role. What is your name',\n    answerType: 'input',\n    identifier: 'name',\n    validator: {\n      message: (value) =>\n        `${\n          value.length < 5 ? 'Your name cannot be that short' : 'Your name cannot be definitely that long'\n        }. \\n\\nYour name length should range between 5 - 26 characters`,\n      validatorCallback: (value) => value.length > 4 && value.length < 27,\n    },\n  },\n  {\n    question: ({ name }) => {\n      return `Nice to meet you ${name}. \\n\\nI will take you this process which should take you at most 5 minutes.\\n\\nPlease upload your resume below we will use for reference when you come for the in house interview`;\n    },\n    answerType: 'file',\n    identifier: 'resume',\n  },\n  {\n    question: ({ name = '' }) =>\n      `Great ${name.split(' ')[0]}. \\n\\nIn less than 100 words, tell me about yourself. \\n\\nWho is ${\n        name.split(' ')[0]\n      }?`,\n    answerType: 'paragraph',\n    identifier: 'overview',\n    validator: {\n      validatorCallback: (value = '') => value.split(' ').length < 100,\n      message: () => `Sorry, your information is TL;DR. Please keep it less than 100 words`,\n    },\n  },\n  {\n    question: () =>\n      'Nice!. Which of the skills below identify with you? \\n\\nYou should have at least one of the skills to proceed',\n    answerType: 'select',\n    identifier: 'skills',\n    options: ['HTML', 'CSS', 'Javascript', 'NodeJS', 'Typescript'],\n    validator: {\n      validatorCallback: (value) => value.length > 0,\n      message: () => `You ought to have at least one skill to proceed`,\n    },\n  },\n  {\n    question: () =>\n      'Which other skill not mentioned above do you have? \\n\\nIf None, just type None. \\n\\nIf more than one, list them as comma separated values.',\n    answerType: 'csv',\n    identifier: 'otherSkills',\n  },\n  {\n    question: () => 'Where do you live. Tell me the name of your nearest City.',\n    answerType: 'input',\n    identifier: 'city',\n  },\n  {\n    question: ({ name }) => `How old are you ${name}?`,\n    answerType: 'number',\n    identifier: 'age',\n  },\n  {\n    question: () =>\n      'Send me your mobile number. I will use it to contact you in case I need further information from you',\n    answerType: 'input',\n    identifier: 'mobile',\n  },\n];\nconst App: FC<{}> = () => {\n  const [questions, setQuestions] = useState(mockQuestions);\n  return (\n    <div className={styles.app}>\n      <div className={styles.description}>\n        <span>This is a demo for</span>\n        <a href=\"https://www.npmjs.com/package/chat-form\">chat-form</a>\n      </div>\n      <div className={styles.description}>\n        <span>View source code in</span>\n        <a href=\"https://github.com/koechkevin/chat-form/blob/master/src/App.tsx\">github</a>\n      </div>\n      <div>\n        <ChatBot\n          lastMessage={({ name = '' }) =>\n            `Thank you ${name}. I will get back to you through the information you shared.`\n          }\n          onAnswer={setQuestions}\n          questions={questions}\n          className={styles.demo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"file":"App.js"}