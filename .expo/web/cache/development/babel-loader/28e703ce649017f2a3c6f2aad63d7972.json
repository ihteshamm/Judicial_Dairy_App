{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\JudicialDairyAPP\\\\screens\\\\Cl_Lawyer.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  var client = global.MyName;\n  var email;\n  var name;\n  var description;\n  useEffect(function () {\n    fetch(global.link + '/GetLawyerList/').then(function (res) {\n      return res.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n      console.log(responseJson);\n    }).then(function (result) {\n      ({\n        item: result\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.name ? item.client.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, item.id, ' : ', item.name);\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 1,\n        width: '100%',\n        backgroundColor: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    Alert.alert(\"Lawyer Details\", \"Name : \" + item.name + \"\\nEmail : \" + item.email + \"\\nPhone : \" + item.contact + \"\\nAddress : \" + item.address, [{\n      text: \"Back\",\n      style: \"cancel\"\n    }, {\n      text: \"Send Request\",\n      onPress: function onPress() {\n        return SendRequest(item);\n      }\n    }]);\n  };\n\n  var SendRequest = function SendRequest(item) {\n    Alert.prompt(\"Send Request\", \"Describle Your Case here!\", [{\n      text: \"Back\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      }\n    }, {\n      text: \"Send\",\n      onPress: function onPress(password) {\n        return BackendCaseSend(item, password);\n      }\n    }]);\n  };\n\n  var BackendCaseSend = function BackendCaseSend(item, password) {\n    name = item.name;\n    description = password;\n    email = item.email;\n    fetch(global.link + \"/send-CaseRequest\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        client: client,\n        description: description\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(\"Request Send successfuly\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    value: search,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Search Lawyers!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), React.createElement(FlatList, {\n    data: filteredDataSource,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ItemSeparatorComponent: ItemSeparatorView,\n    renderItem: ItemView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/JudicialDairyAPP/screens/Cl_Lawyer.js"],"names":["React","useState","useEffect","App","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","client","global","MyName","email","name","description","fetch","link","then","res","json","responseJson","console","log","result","item","catch","error","searchFilterFunction","text","newData","filter","itemData","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","Alert","alert","contact","address","style","onPress","SendRequest","prompt","password","BackendCaseSend","method","headers","body","JSON","stringify","data","err","flex","container","textInputStyle","index","toString","StyleSheet","create","padding","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    SafeAreaView,\r\n    Text,\r\n    StyleSheet,\r\n    View,\r\n    FlatList,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Alert\r\n} from 'react-native';\r\nconst App = () => {\r\n    const [search, setSearch] = useState('');\r\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n    const [masterDataSource, setMasterDataSource] = useState([]);\r\n    const client = global.MyName;\r\n    var email;\r\n    var name;\r\n    var description;\r\n    useEffect(() => {\r\n        fetch(global.link + '/GetLawyerList/')\r\n            .then((res) => res.json())\r\n            .then((responseJson) => {\r\n                setFilteredDataSource(responseJson);\r\n                setMasterDataSource(responseJson);\r\n                console.log(responseJson);\r\n            })\r\n            .then(result => {\r\n                ({\r\n                    item: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n    const searchFilterFunction = (text) => {\r\n        // Check if searched text is not blank\r\n        if (text) {\r\n            // Inserted text is not blank\r\n            // Filter the masterDataSource\r\n            // Update FilteredDataSource\r\n            const newData = masterDataSource.filter(\r\n                function (item) {\r\n                    const itemData = item.name\r\n                        ? item.client.toUpperCase()\r\n                        : ''.toUpperCase();\r\n                    const textData = text.toUpperCase();\r\n                    return itemData.indexOf(textData) > -1;\r\n                });\r\n            setFilteredDataSource(newData);\r\n            setSearch(text);\r\n        } else {\r\n            // Inserted text is blank\r\n            // Update FilteredDataSource with masterDataSource\r\n            setFilteredDataSource(masterDataSource);\r\n            setSearch(text);\r\n        }\r\n    };\r\n\r\n    const ItemView = ({ item }) => {\r\n        //If server response message same as Data Matched\r\n        return (\r\n            // Flat List Item\r\n            <Text\r\n                style={styles.itemStyle}\r\n                onPress={() => getItem(item)}>\r\n                {item.id}\r\n                {' : '}\r\n                {item.name}\r\n            </Text>\r\n        );\r\n    };\r\n\r\n    const ItemSeparatorView = () => {\r\n        return (\r\n            // Flat List Item Separator\r\n            <View\r\n                style={{\r\n                    height: 1,\r\n                    width: '100%',\r\n                    backgroundColor: 'black',\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const getItem = (item) => {\r\n        // Function for click on an item\r\n        // alert(' Name : ' + item.name + '\\nEmail : ' + item.email + '\\nPhone : ' + item.contact\r\n        // + '\\nAddress : ' + item.address);\r\n        Alert.alert(\r\n            \"Lawyer Details\",\r\n            \"Name : \" + item.name + \"\\nEmail : \" + item.email + \"\\nPhone : \" + item.contact +\r\n            \"\\nAddress : \" + item.address,\r\n            [\r\n                {\r\n                    text: \"Back\",\r\n                    style: \"cancel\"\r\n                },\r\n                { text: \"Send Request\", onPress: () => SendRequest(item) }\r\n            ]\r\n        );\r\n    };\r\n    const SendRequest = (item) => {\r\n        Alert.prompt(\r\n            \"Send Request\",\r\n            \"Describle Your Case here!\",\r\n            [\r\n                {\r\n                    text: \"Back\",\r\n                    onPress: () => console.log(\"Cancel Pressed\"),\r\n                },\r\n                {\r\n                    text: \"Send\",\r\n                    onPress: password => BackendCaseSend(item , password),\r\n\r\n                }\r\n            ],\r\n\r\n        );\r\n    }\r\n    const BackendCaseSend = (item, password) => {\r\n        name = item.name;\r\n        description = password;\r\n        email = item.email;\r\n        fetch(global.link + \"/send-CaseRequest\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                client,\r\n                description\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                Alert.alert(`Request Send successfuly`)\r\n            })\r\n            .catch(err => {\r\n                Alert.alert(\"someting went wrong\")\r\n            })\r\n    }\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.textInputStyle}\r\n                    onChangeText={(text) => searchFilterFunction(text)}\r\n                    value={search}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    placeholder=\"Search Lawyers!\"\r\n                />\r\n                <FlatList\r\n                    data={filteredDataSource}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    ItemSeparatorComponent={ItemSeparatorView}\r\n                    renderItem={ItemView}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'white',\r\n    },\r\n    itemStyle: {\r\n        padding: 10,\r\n    },\r\n    textInputStyle: {\r\n        height: 40,\r\n        borderWidth: 1,\r\n        paddingLeft: 20,\r\n        margin: 5,\r\n        borderColor: '#009688',\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\nexport default App;"]},"metadata":{},"sourceType":"module"}