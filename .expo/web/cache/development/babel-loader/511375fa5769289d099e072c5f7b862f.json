{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\JudicialDairyAPP\\\\screens\\\\Lw_Cases.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  useEffect(function () {\n    fetch(global.link + '/getcases/' + global.MyName).then(function (res) {\n      return res.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n    }).then(function (result) {\n      ({\n        item: result\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.name ? item.client.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, item.id, ' : ', item.client);\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 1,\n        width: '100%',\n        backgroundColor: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert(' Name : ' + item.name + '\\nID : ' + item.id + '\\nLawyer : ' + item.lawyer + '\\nClient : ' + item.client + '\\nRemarks : ' + item.remarks + '\\nNext Hearing : ' + item.nexthearing + '\\nNext Hearing Points : ' + item.nexthearingpints + '\\nProofs : ' + item.proofs + '\\nCourt : ' + item.court + '\\nDescription : ' + item.description);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    value: search,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Search Case!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), React.createElement(FlatList, {\n    data: filteredDataSource,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ItemSeparatorComponent: ItemSeparatorView,\n    renderItem: ItemView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/JudicialDairyAPP/screens/Lw_Cases.js"],"names":["React","useState","useEffect","App","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","fetch","global","link","MyName","then","res","json","responseJson","result","item","catch","error","console","searchFilterFunction","text","newData","filter","itemData","name","client","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","alert","lawyer","remarks","nexthearing","nexthearingpints","proofs","court","description","flex","container","textInputStyle","index","toString","StyleSheet","create","padding","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    SafeAreaView,\r\n    Text,\r\n    StyleSheet,\r\n    View,\r\n    FlatList,\r\n    TextInput,\r\n    TouchableOpacity\r\n} from 'react-native';\r\nconst App = () => {   \r\n    const [search, setSearch] = useState('');\r\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n    const [masterDataSource, setMasterDataSource] = useState([]);\r\n\r\n    useEffect(() => {\r\n         fetch(global.link + '/getcases/'+global.MyName)\r\n            .then((res) => res.json())\r\n            .then((responseJson) => {\r\n                setFilteredDataSource(responseJson);\r\n                setMasterDataSource(responseJson);\r\n            })\r\n            .then(result => {\r\n                ({\r\n                    item: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n    const searchFilterFunction = (text) => {\r\n        // Check if searched text is not blank\r\n        if (text) {\r\n            // Inserted text is not blank\r\n            // Filter the masterDataSource\r\n            // Update FilteredDataSource\r\n            const newData = masterDataSource.filter(\r\n                function (item) {\r\n                    const itemData = item.name\r\n                        ? item.client.toUpperCase()\r\n                        : ''.toUpperCase();\r\n                    const textData = text.toUpperCase();\r\n                    return itemData.indexOf(textData) > -1;\r\n                });\r\n            setFilteredDataSource(newData);\r\n            setSearch(text);\r\n        } else {\r\n            // Inserted text is blank\r\n            // Update FilteredDataSource with masterDataSource\r\n            setFilteredDataSource(masterDataSource);\r\n            setSearch(text);\r\n        }\r\n    };\r\n\r\n    const ItemView = ({ item }) => {\r\n        //If server response message same as Data Matched\r\n        return (\r\n            // Flat List Item\r\n            <Text\r\n                style={styles.itemStyle}\r\n                onPress={() => getItem(item)}>\r\n                {item.id}\r\n                {' : '}\r\n                {item.client}\r\n            </Text>\r\n        );\r\n    };\r\n\r\n    const ItemSeparatorView = () => {\r\n        return (\r\n            // Flat List Item Separator\r\n            <View\r\n                style={{\r\n                    height: 1,\r\n                    width: '100%',\r\n                    backgroundColor: 'black',\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const getItem = (item) => {\r\n        // Function for click on an item\r\n        alert(' Name : ' + item.name+ '\\nID : ' + item.id +'\\nLawyer : ' + item.lawyer\r\n        + '\\nClient : ' + item.client + '\\nRemarks : ' + item.remarks+ '\\nNext Hearing : ' + \r\n        item.nexthearing+ '\\nNext Hearing Points : ' + item.nexthearingpints+ '\\nProofs : ' + item.proofs+\r\n        '\\nCourt : ' + item.court+ '\\nDescription : ' + item.description);\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.textInputStyle}\r\n                    onChangeText={(text) => searchFilterFunction(text)}\r\n                    value={search}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    placeholder=\"Search Case!\"\r\n                />\r\n                <FlatList\r\n                    data={filteredDataSource}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    ItemSeparatorComponent={ItemSeparatorView}\r\n                    renderItem={ItemView}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'white',\r\n    },\r\n    itemStyle: {\r\n        padding: 10,\r\n    },\r\n    textInputStyle: {\r\n        height: 40,\r\n        borderWidth: 1,\r\n        paddingLeft: 20,\r\n        margin: 5,\r\n        borderColor: '#009688',\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\nexport default App;"]},"metadata":{},"sourceType":"module"}