{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\JudicialDairyAPP\\\\screens\\\\Cl_Chat.js\";\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { images, SIZES, COLORS, FONTS } from \"../constants\";\nimport { Divider, SearchBar, Header, Card, ListItem, Avatar } from 'react-native-elements';\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hello!',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }, {\n      _id: 2,\n      text: 'hey!',\n      createdAt: new Date(),\n      user: {\n        _id: 1,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  useEffect(function () {\n    fetch(global.link + '/Client_Chat/' + global.MyName).then(function (res) {\n      return res.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n    }).then(function (result) {\n      ({\n        item: result\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/JudicialDairyAPP/screens/Cl_Chat.js"],"names":["React","useState","useCallback","useEffect","GiftedChat","images","SIZES","COLORS","FONTS","Divider","SearchBar","Header","Card","ListItem","Avatar","App","messages","setMessages","_id","text","createdAt","Date","user","name","avatar","filteredDataSource","setFilteredDataSource","fetch","global","link","MyName","then","res","json","responseJson","result","item","catch","error","console","onSend","previousMessages","append","styles","StyleSheet","create","container","backgroundColor","itemStyle","padding","textInputStyle","height","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\nimport {\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  View, \r\n  FlatList,\r\n  TextInput,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport { images, SIZES, COLORS, FONTS } from '../constants';\r\nimport { Divider, SearchBar, Header, Card, ListItem, Avatar } from 'react-native-elements';\r\n\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMessages([\r\n      {\r\n        _id: 1,\r\n        text: 'Hello!',\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id: 2,\r\n          name: 'React Native',\r\n          avatar: 'https://placeimg.com/140/140/any',\r\n        },\r\n      },\r\n      {\r\n        _id: 2,\r\n        text: 'hey!',\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id: 1,\r\n          name: 'React Native',\r\n          avatar: 'https://placeimg.com/140/140/any',\r\n        },\r\n      },\r\n      \r\n    ])\r\n  }, [])\r\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n  useEffect(() => {\r\n       fetch(global.link + '/Client_Chat/'+global.MyName)\r\n          .then((res) => res.json())\r\n          .then((responseJson) => {\r\n              setFilteredDataSource(responseJson);\r\n          })\r\n          .then(result => {\r\n              ({\r\n                  item: result\r\n              });\r\n          })\r\n          .catch((error) => {\r\n              console.error(error);\r\n          });\r\n  }, []);\r\n  const onSend = useCallback((messages = []) => {\r\n    setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n  }, [])\r\n\r\n  return (\r\n    <GiftedChat\r\n      messages={messages}\r\n      onSend={messages => onSend(messages)}\r\n      user={{\r\n        _id: 1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n  },\r\n  itemStyle: {\r\n    padding: 10,\r\n  },\r\n  textInputStyle: {\r\n    height: 40,\r\n    borderWidth: 1,\r\n    paddingLeft: 20,\r\n    margin: 5,\r\n    borderColor: '#009688',\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}