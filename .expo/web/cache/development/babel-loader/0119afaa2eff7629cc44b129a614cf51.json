{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\JudicialDairyAPP\\\\screens\\\\SignUp.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var getDetails = function getDetails(type) {\n    if (route.params) {\n      switch (type) {\n        case \"name\":\n          return route.params.name;\n\n        case \"email\":\n          return route.params.email;\n\n        case \"contact\":\n          return route.params.contact;\n\n        case \"address\":\n          return route.params.address;\n\n        case \"password\":\n          return route.params.password;\n\n        case \"types\":\n          return route.params.types;\n      }\n    }\n\n    return \"\";\n  };\n\n  var _useState = useState(getDetails(\"name\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(getDetails(\"email\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(getDetails(\"contact\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      contact = _useState6[0],\n      setContact = _useState6[1];\n\n  var _useState7 = useState(getDetails(\"address\")),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(getDetails(\"password\")),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(getDetails(\"types\")),\n      _useState12 = _slicedToArray(_useState11, 2),\n      types = _useState12[0],\n      setTypes = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modal = _useState14[0],\n      setModal = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      enableshift = _useState16[0],\n      setenableShift = _useState16[1];\n\n  var submitData = function submitData() {\n    fetch(\"http://10.0.2.2:3000/send-data\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        contact: contact,\n        address: address,\n        password: password,\n        types: types\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(data.name + \" is saved successfuly\");\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n    });\n  };\n\n  var updateDetails = function updateDetails() {\n    fetch(\"http://10.0.2.2:3000/update\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: route.params._id,\n        name: name,\n        email: email,\n        contact: contact,\n        address: address,\n        password: password,\n        types: types\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(data.name + \" is updated successfuly\");\n      navigation.navigate(\"Login\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    style: styles.root,\n    enabled: enableshift,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Name\",\n    style: styles.inputStyle,\n    value: name,\n    onFocus: function onFocus() {\n      return setenableShift(false);\n    },\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    style: styles.inputStyle,\n    value: email,\n    theme: theme,\n    onFocus: function onFocus() {\n      return setenableShift(false);\n    },\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"phone\",\n    style: styles.inputStyle,\n    value: contact,\n    theme: theme,\n    onFocus: function onFocus() {\n      return setenableShift(false);\n    },\n    keyboardType: \"number-pad\",\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setContact(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"salary\",\n    style: styles.inputStyle,\n    value: address,\n    theme: theme,\n    onFocus: function onFocus() {\n      return setenableShift(true);\n    },\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"position\",\n    style: styles.inputStyle,\n    value: password,\n    theme: theme,\n    onFocus: function onFocus() {\n      return setenableShift(true);\n    },\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Types\",\n    style: styles.inputStyle,\n    value: types,\n    onFocus: function onFocus() {\n      return setenableShift(false);\n    },\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setTypes(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), route.params ? React.createElement(Button, {\n    style: styles.inputStyle,\n    icon: \"content-save\",\n    mode: \"contained\",\n    theme: theme,\n    onPress: function onPress() {\n      return updateDetails();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 14\n    }\n  }, \"Update details\") : React.createElement(Button, {\n    style: styles.inputStyle,\n    icon: \"content-save\",\n    mode: \"contained\",\n    theme: theme,\n    onPress: function onPress() {\n      return submitData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 14\n    }\n  }, \"save\")));\n};\n\nvar theme = {\n  colors: {\n    primary: \"#006aff\"\n  }\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  },\n  inputStyle: {\n    margin: 5\n  },\n  modalView: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"white\"\n  },\n  modalButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10\n  }\n});\nexport default SignUp;","map":{"version":3,"sources":["D:/JudicialDairyAPP/screens/SignUp.js"],"names":["React","useState","TextInput","Button","ImagePicker","Permissions","SignUp","navigation","route","getDetails","type","params","name","email","contact","address","password","types","setName","setEmail","setContact","setAddress","setPassword","setTypes","modal","setModal","enableshift","setenableShift","submitData","fetch","method","headers","body","JSON","stringify","then","res","json","data","Alert","alert","navigate","catch","err","updateDetails","id","_id","styles","root","inputStyle","theme","text","colors","primary","StyleSheet","create","flex","margin","modalView","position","bottom","width","backgroundColor","modalButtonView","flexDirection","justifyContent","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;AAEA,SAAQC,SAAR,EAAkBC,MAAlB,QAA+B,oBAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsB;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;;AACjC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAQ;AACxB,QAAGF,KAAK,CAACG,MAAT,EAAgB;AACb,cAAOD,IAAP;AACI,aAAK,MAAL;AACI,iBAAOF,KAAK,CAACG,MAAN,CAAaC,IAApB;;AACJ,aAAK,OAAL;AACG,iBAAOJ,KAAK,CAACG,MAAN,CAAaE,KAApB;;AACH,aAAK,SAAL;AACE,iBAAOL,KAAK,CAACG,MAAN,CAAaG,OAApB;;AACF,aAAK,SAAL;AACI,iBAAON,KAAK,CAACG,MAAN,CAAaI,OAApB;;AACJ,aAAK,UAAL;AACI,iBAAQP,KAAK,CAACG,MAAN,CAAaK,QAArB;;AACJ,aAAK,OAAL;AACE,iBAAQR,KAAK,CAACG,MAAN,CAAaM,KAArB;AAZN;AAcF;;AACD,WAAO,EAAP;AACF,GAlBD;;AADiC,kBAqBVhB,QAAQ,CAACQ,UAAU,CAAC,MAAD,CAAX,CArBE;AAAA;AAAA,MAqB1BG,IArB0B;AAAA,MAqBrBM,OArBqB;;AAAA,mBAsBRjB,QAAQ,CAACQ,UAAU,CAAC,OAAD,CAAX,CAtBA;AAAA;AAAA,MAsB1BI,KAtB0B;AAAA,MAsBpBM,QAtBoB;;AAAA,mBAuBJlB,QAAQ,CAACQ,UAAU,CAAC,SAAD,CAAX,CAvBJ;AAAA;AAAA,MAuB1BK,OAvB0B;AAAA,MAuBlBM,UAvBkB;;AAAA,mBAwBJnB,QAAQ,CAACQ,UAAU,CAAC,SAAD,CAAX,CAxBJ;AAAA;AAAA,MAwB1BM,OAxB0B;AAAA,MAwBlBM,UAxBkB;;AAAA,mBAyBFpB,QAAQ,CAACQ,UAAU,CAAC,UAAD,CAAX,CAzBN;AAAA;AAAA,MAyB1BO,QAzB0B;AAAA,MAyBjBM,WAzBiB;;AAAA,oBA0BRrB,QAAQ,CAACQ,UAAU,CAAC,OAAD,CAAX,CA1BA;AAAA;AAAA,MA0B1BQ,KA1B0B;AAAA,MA0BpBM,QA1BoB;;AAAA,oBA2BRtB,QAAQ,CAAC,KAAD,CA3BA;AAAA;AAAA,MA2B1BuB,KA3B0B;AAAA,MA2BpBC,QA3BoB;;AAAA,oBA4BIxB,QAAQ,CAAC,KAAD,CA5BZ;AAAA;AAAA,MA4B1ByB,WA5B0B;AAAA,MA4BdC,cA5Bc;;AA8BjC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAI;AACjBC,IAAAA,KAAK,CAAC,gCAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAC,MAD4B;AAEnCC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV,OAF2B;AAKnCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAEhBtB,QAAAA,IAAI,EAAJA,IAFgB;AAGhBC,QAAAA,KAAK,EAALA,KAHgB;AAIhBC,QAAAA,OAAO,EAAPA,OAJgB;AAKhBC,QAAAA,OAAO,EAAPA,OALgB;AAMhBC,QAAAA,QAAQ,EAARA,QANgB;AAOhBC,QAAAA,KAAK,EAALA;AAPgB,OAAf;AAL8B,KAAlC,CAAL,CAeCkB,IAfD,CAeM,UAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,KAfT,EAgBCF,IAhBD,CAgBM,UAAAG,IAAI,EAAE;AACRC,MAAAA,KAAK,CAACC,KAAN,CAAeF,IAAI,CAAC1B,IAApB;AACAL,MAAAA,UAAU,CAACkC,QAAX,CAAoB,MAApB;AACH,KAnBD,EAoBCC,KApBD,CAoBO,UAAAC,GAAG,EAAE;AACVJ,MAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACH,KAtBC;AAuBL,GAxBD;;AA0BA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACtBf,IAAAA,KAAK,CAAC,6BAAD,EAA+B;AAChCC,MAAAA,MAAM,EAAC,MADyB;AAEhCC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV,OAFwB;AAKhCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBW,QAAAA,EAAE,EAACrC,KAAK,CAACG,MAAN,CAAamC,GADA;AAEhBlC,QAAAA,IAAI,EAAJA,IAFgB;AAGhBC,QAAAA,KAAK,EAALA,KAHgB;AAIhBC,QAAAA,OAAO,EAAPA,OAJgB;AAKhBC,QAAAA,OAAO,EAAPA,OALgB;AAMhBC,QAAAA,QAAQ,EAARA,QANgB;AAOhBC,QAAAA,KAAK,EAALA;AAPgB,OAAf;AAL2B,KAA/B,CAAL,CAeCkB,IAfD,CAeM,UAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,KAfT,EAgBCF,IAhBD,CAgBM,UAAAG,IAAI,EAAE;AACRC,MAAAA,KAAK,CAACC,KAAN,CAAeF,IAAI,CAAC1B,IAApB;AACAL,MAAAA,UAAU,CAACkC,QAAX,CAAoB,OAApB;AACH,KAnBD,EAoBCC,KApBD,CAoBO,UAAAC,GAAG,EAAE;AACVJ,MAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACH,KAtBC;AAuBH,GAxBD;;AAyBA,SACC,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAC,UAA/B;AAA0C,IAAA,KAAK,EAAEO,MAAM,CAACC,IAAxD;AAA8D,IAAA,OAAO,EAAEtB,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,KAAK,EAAEqB,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAErC,IAHX;AAII,IAAA,OAAO,EAAE;AAAA,aAAIe,cAAc,CAAC,KAAD,CAAlB;AAAA,KAJb;AAKI,IAAA,KAAK,EAAEuB,KALX;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIjC,OAAO,CAACiC,IAAD,CAAX;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAEpC,KAHX;AAII,IAAA,KAAK,EAAEqC,KAJX;AAKI,IAAA,OAAO,EAAE;AAAA,aAAIvB,cAAc,CAAC,KAAD,CAAlB;AAAA,KALb;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,YAAY,EAAE,sBAAAwB,IAAI;AAAA,aAAIhC,QAAQ,CAACgC,IAAD,CAAZ;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAmBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAEnC,OAHX;AAII,IAAA,KAAK,EAAEoC,KAJX;AAKI,IAAA,OAAO,EAAE;AAAA,aAAIvB,cAAc,CAAC,KAAD,CAAlB;AAAA,KALb;AAMI,IAAA,YAAY,EAAC,YANjB;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,YAAY,EAAE,sBAAAwB,IAAI;AAAA,aAAG/B,UAAU,CAAC+B,IAAD,CAAb;AAAA,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA8BI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAElC,OAHX;AAII,IAAA,KAAK,EAAEmC,KAJX;AAKI,IAAA,OAAO,EAAE;AAAA,aAAIvB,cAAc,CAAC,IAAD,CAAlB;AAAA,KALb;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,YAAY,EAAE,sBAAAwB,IAAI;AAAA,aAAG9B,UAAU,CAAC8B,IAAD,CAAb;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAuCI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAEjC,QAHX;AAII,IAAA,KAAK,EAAEkC,KAJX;AAKI,IAAA,OAAO,EAAE;AAAA,aAAIvB,cAAc,CAAC,IAAD,CAAlB;AAAA,KALb;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,YAAY,EAAE,sBAAAwB,IAAI;AAAA,aAAG7B,WAAW,CAAC6B,IAAD,CAAd;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EAgDI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACE,UAFlB;AAGI,IAAA,KAAK,EAAEhC,KAHX;AAII,IAAA,OAAO,EAAE;AAAA,aAAIU,cAAc,CAAC,KAAD,CAAlB;AAAA,KAJb;AAKI,IAAA,KAAK,EAAEuB,KALX;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAI5B,QAAQ,CAAC4B,IAAD,CAAZ;AAAA,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDJ,EAyDM3C,KAAK,CAACG,MAAN,GACD,oBAAC,MAAD;AACA,IAAA,KAAK,EAAEoC,MAAM,CAACE,UADd;AAEA,IAAA,IAAI,EAAC,cAFL;AAGC,IAAA,IAAI,EAAC,WAHN;AAIC,IAAA,KAAK,EAAEC,KAJR;AAKC,IAAA,OAAO,EAAE;AAAA,aAAMN,aAAa,EAAnB;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADC,GAUD,oBAAC,MAAD;AACA,IAAA,KAAK,EAAEG,MAAM,CAACE,UADd;AAEA,IAAA,IAAI,EAAC,cAFL;AAGC,IAAA,IAAI,EAAC,WAHN;AAIC,IAAA,KAAK,EAAEC,KAJR;AAKC,IAAA,OAAO,EAAE;AAAA,aAAMtB,UAAU,EAAhB;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnEL,CADH,CADD;AAmFH,CApKD;;AAsKA,IAAMsB,KAAK,GAAG;AACVE,EAAAA,MAAM,EAAC;AACHC,IAAAA,OAAO,EAAC;AADL;AADG,CAAd;AAKA,IAAMN,MAAM,GAACO,UAAU,CAACC,MAAX,CAAkB;AAC3BP,EAAAA,IAAI,EAAC;AACFQ,IAAAA,IAAI,EAAC;AADH,GADsB;AAI3BP,EAAAA,UAAU,EAAC;AACPQ,IAAAA,MAAM,EAAC;AADA,GAJgB;AAO3BC,EAAAA,SAAS,EAAC;AACNC,IAAAA,QAAQ,EAAC,UADH;AAENC,IAAAA,MAAM,EAAC,CAFD;AAGNC,IAAAA,KAAK,EAAC,MAHA;AAINC,IAAAA,eAAe,EAAC;AAJV,GAPiB;AAc3BC,EAAAA,eAAe,EAAC;AACZC,IAAAA,aAAa,EAAC,KADF;AAEZC,IAAAA,cAAc,EAAC,cAFH;AAGZC,IAAAA,OAAO,EAAC;AAHI;AAdW,CAAlB,CAAb;AAqBA,eAAe5D,MAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { StyleSheet, Text, View,Modal,Alert,KeyboardAvoidingView} from 'react-native';\r\nimport {TextInput,Button} from 'react-native-paper'\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\n\r\nconst SignUp = ({navigation,route})=>{\r\n    const getDetails = (type)=>{\r\n       if(route.params){\r\n          switch(type){\r\n              case \"name\":\r\n                  return route.params.name\r\n              case \"email\":\r\n                 return route.params.email\r\n              case \"contact\":\r\n                return route.params.contact\r\n              case \"address\":\r\n                  return route.params.address  \r\n              case \"password\":\r\n                  return  route.params.password\r\n              case \"types\":\r\n                return  route.params.types  \r\n          }\r\n       }\r\n       return \"\"\r\n    }\r\n    \r\n    const [name,setName] = useState(getDetails(\"name\"))\r\n    const [email,setEmail] = useState(getDetails(\"email\"))\r\n    const [contact,setContact] = useState(getDetails(\"contact\"))\r\n    const [address,setAddress] = useState(getDetails(\"address\"))\r\n    const [password,setPassword] = useState(getDetails(\"password\"))\r\n    const [types,setTypes] = useState(getDetails(\"types\"))\r\n    const [modal,setModal] = useState(false)\r\n    const [enableshift,setenableShift] = useState(false)\r\n\r\n    const submitData = ()=>{\r\n          fetch(\"http://10.0.2.2:3000/send-data\",{\r\n              method:\"post\",\r\n              headers:{\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body:JSON.stringify({\r\n                \r\n                  name,\r\n                  email,\r\n                  contact,\r\n                  address,\r\n                  password,\r\n                  types\r\n              })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(data=>{\r\n              Alert.alert(`${data.name} is saved successfuly`)\r\n              navigation.navigate(\"Home\")\r\n          })\r\n          .catch(err=>{\r\n            Alert.alert(\"someting went wrong\")\r\n        })\r\n    }\r\n\r\n    const updateDetails = ()=>{\r\n        fetch(\"http://10.0.2.2:3000/update\",{\r\n            method:\"post\",\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:route.params._id,\r\n                name,\r\n                email,\r\n                contact,\r\n                address,\r\n                password,\r\n                types\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            Alert.alert(`${data.name} is updated successfuly`)\r\n            navigation.navigate(\"Login\")\r\n        })\r\n        .catch(err=>{\r\n          Alert.alert(\"someting went wrong\")\r\n      })\r\n    }\r\n    return(\r\n     <KeyboardAvoidingView behavior=\"position\" style={styles.root} enabled={enableshift}>\r\n        <View >\r\n            <TextInput\r\n                label='Name'\r\n                style={styles.inputStyle}\r\n                value={name}\r\n                onFocus={()=>setenableShift(false)}\r\n                theme={theme}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setName(text)}\r\n            />\r\n            <TextInput\r\n                label='Email'\r\n                style={styles.inputStyle}\r\n                value={email}\r\n                theme={theme}\r\n                onFocus={()=>setenableShift(false)}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setEmail(text)}\r\n            />\r\n            <TextInput\r\n                label='phone'\r\n                style={styles.inputStyle}\r\n                value={contact}\r\n                theme={theme}\r\n                onFocus={()=>setenableShift(false)}\r\n                keyboardType=\"number-pad\"\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setContact(text)}\r\n            />\r\n             \r\n            <TextInput\r\n                label='salary'\r\n                style={styles.inputStyle}\r\n                value={address}\r\n                theme={theme}\r\n                onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setAddress(text)}\r\n            />\r\n            <TextInput\r\n                label='position'\r\n                style={styles.inputStyle}\r\n                value={password}\r\n                theme={theme}\r\n                onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setPassword(text)}\r\n            />\r\n            <TextInput\r\n                label='Types'\r\n                style={styles.inputStyle}\r\n                value={types}\r\n                onFocus={()=>setenableShift(false)}\r\n                theme={theme}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setTypes(text)}\r\n            />\r\n             {route.params?\r\n             <Button \r\n             style={styles.inputStyle}\r\n             icon=\"content-save\"\r\n              mode=\"contained\" \r\n              theme={theme}\r\n              onPress={() => updateDetails()}>\r\n                   Update details\r\n             </Button>\r\n             : \r\n             <Button \r\n             style={styles.inputStyle}\r\n             icon=\"content-save\"\r\n              mode=\"contained\" \r\n              theme={theme}\r\n              onPress={() => submitData()}>\r\n                   save\r\n             </Button>\r\n             }         \r\n      </View>\r\n      </KeyboardAvoidingView>\r\n     \r\n \r\n    )\r\n}\r\n\r\nconst theme = {\r\n    colors:{\r\n        primary:\"#006aff\"\r\n    }\r\n}\r\nconst styles=StyleSheet.create({\r\n    root:{\r\n       flex:1,\r\n    },\r\n    inputStyle:{\r\n        margin:5\r\n    },\r\n    modalView:{\r\n        position:\"absolute\",\r\n        bottom:2,\r\n        width:\"100%\",\r\n        backgroundColor:\"white\"\r\n\r\n    },\r\n    modalButtonView:{\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-around\",\r\n        padding:10\r\n    }\r\n})\r\n\r\nexport default SignUp\r\n\r\n\r\n// import React from 'react';\r\n// import { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\n// import useState from 'react';\r\n// import { Alert} from 'react-native';\r\n\r\n// class SignUp extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       items: [],\r\n//       UserName: '',\r\n//       UserEmail: '',\r\n//       UserContact: '',\r\n//       UserAddress: '',\r\n//       UserPassword: '',\r\n//       UserType: ''\r\n//     }\r\n//   }\r\n//  CreateEmployee = ({navigation,route})=>{\r\n//     const getDetails = (type)=>{\r\n//        if(route.params){\r\n//           switch(type){\r\n//               case \"name\":\r\n//                   return route.params.name\r\n//               case \"email\":\r\n//                  return route.params.email\r\n//               case \"contact\":\r\n//                 return route.params.contact\r\n//               case \"address\":\r\n//                   return route.params.address  \r\n//               case \"password\":\r\n//                   return  route.params.password\r\n//               case \"types\":\r\n//                 return  route.params.types  \r\n//           }\r\n//        }\r\n//        return \"\"\r\n//     }\r\n    \r\n//     const [name,setName] = useState(getDetails(\"name\"))\r\n//     const [email,setEmail] = useState(getDetails(\"email\"))\r\n//     const [contact,setContact] = useState(getDetails(\"contact\"))\r\n//     const [address,setAddress] = useState(getDetails(\"address\"))\r\n//     const [password,setPassword] = useState(getDetails(\"password\"))\r\n//     const [types,setTypes] = useState(getDetails(\"types\"))\r\n//     const [modal,setModal] = useState(false)\r\n//     const [enableshift,setenableShift] = useState(false)\r\n\r\n//  submitData = ()=>{\r\n//    console.log(\"In submit data\");\r\n//     fetch('http://192.168.10.9:5000/users', {\r\n//   method:\"post\",\r\n//               headers:{\r\n//                 'Content-Type': 'application/json'\r\n//               },\r\n//               body:JSON.stringify({\r\n                \r\n//                   name,\r\n//                   email,\r\n//                   contact,\r\n//                   address,\r\n//                   password,\r\n//                   types\r\n//               })\r\n//           })\r\n//           .then(res=>res.json())\r\n//           .then(data=>{\r\n//               Alert.alert(`${data.name} is saved successfuly`)\r\n//               navigation.navigate(\"Login\")\r\n//           })\r\n//           .catch(err=>{\r\n//             Alert.alert(\"someting went wrong\")\r\n//         })\r\n//     }\r\n\r\n//    updateDetails = ()=>{\r\n//         fetch(\"http://10.0.2.2:3000/update\",{\r\n//             method:\"post\",\r\n//             headers:{\r\n//               'Content-Type': 'application/json'\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 id:route.params._id,\r\n//                 name,\r\n//                 email,\r\n//                 phone,\r\n//                 salary,\r\n//                 picture,\r\n//                 position\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then(data=>{\r\n//             Alert.alert(`${data.name} is updated successfuly`)\r\n//             navigation.navigate(\"Home\")\r\n//         })\r\n//         .catch(err=>{\r\n//           Alert.alert(\"someting went wrong\")\r\n//       })\r\n//     } \r\n  \r\n//   UserSignupFunction = () => {\r\n//     const { items } = this.state;\r\n//     const { UserName } = this.state;\r\n//     const { UserEmail } = this.state;\r\n//     const { UserContact } = this.state;\r\n//     const { UserAddress } = this.state;\r\n//     const { UserPassword } = this.state;\r\n//     const { UserType } = this.state;\r\n//     console.log(\"1234\");\r\n// //    fetch('http://192.168.10.9:3210/users', {\r\n\r\n//       fetch('http://e8a0-39-50-117-105.ngrok.io/users', {\r\n//     })\r\n//       .then(res => res.json())\r\n//       .then(result => {\r\n//         this.setState({\r\n//           items: result\r\n//         });\r\n//         console.log(items);\r\n//       });\r\n//     // If server response message same as Data Matched\r\n//     // var i = 0;\r\n//     // if (items[i].Email == UserEmail) {\r\n//     //   if (items[i].Password == UserPassword) {\r\n//     //     if (items[i].User_Type == \"Lawyer\") {\r\n//     //       console.log(\"Successfully Login\");\r\n//     //       this.props.navigation.navigate('Lawyer');\r\n//     //     } else if (items[i].User_Type == \"Client\") {\r\n//     //       console.log(\"Successfully Login\");\r\n//     //       this.props.navigation.navigate('Client');\r\n//     //     }\r\n//     //   } else {\r\n//     //     i++;\r\n//     //   }\r\n//     // }\r\n//     // else {\r\n//     //   i++;\r\n//     // }\r\n//   }\r\n//   submitData = ()=>{\r\n//     fetch('http://e8a0-39-50-117-105.ngrok.io/users', {\r\n//       method:\"post\",\r\n//         headers:{\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body:JSON.stringify({\r\n          \r\n//             name,\r\n//             email,\r\n//             contact,\r\n//             address,\r\n//             password,\r\n//         })\r\n//     })\r\n//     .then(res=>res.json())\r\n//     .then(data=>{\r\n//         Alert.alert(`${data.name} is saved successfuly`)\r\n//         navigation.navigate(\"Home\")\r\n//     })\r\n//     .catch(err=>{\r\n//       Alert.alert(\"someting went wrong\")\r\n//   })\r\n// }\r\n//  }\r\n\r\n//   render() {\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <Text style={styles.logo}>Sign Up!</Text>\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             style={styles.inputText}\r\n//             placeholder=\"Username. . .\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ UserName: text })} />\r\n//         </View>\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             style={styles.inputText}\r\n//             placeholder=\"Email. . .\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ UserEmail: text })} />\r\n//         </View>\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             style={styles.inputText}\r\n//             placeholder=\"Contact No.\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ UserContact: text })} />\r\n//         </View>\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             style={styles.inputText}\r\n//             placeholder=\"Address. . .\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ UserAddress: text })} />\r\n//         </View>\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             secureTextEntry\r\n//             style={styles.inputText}\r\n//             placeholder=\"Password...\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ UserPassword: text })} />\r\n//         </View>\r\n\r\n//         <View style={styles.inputView} >\r\n//           <TextInput\r\n//             secureTextEntry\r\n//             style={styles.inputText}\r\n//             placeholder=\"confirm Password...\"\r\n//             placeholderTextColor=\"#003f5c\"\r\n//             onChangeText={text => this.setState({ password: text })} />\r\n//         </View>\r\n//         <TouchableOpacity onPress={this.submitData}\r\n//           style={styles.loginBtn}>\r\n//           <Text style={styles.loginText}>Signup</Text>\r\n//         </TouchableOpacity>\r\n//         <TouchableOpacity onPress={() => insert()} >\r\n//           <Text> </Text>\r\n//           <Text style={styles.loginText}>login!</Text>\r\n//         </TouchableOpacity>\r\n\r\n\r\n//       </View>\r\n//     );\r\n\r\n//   }\r\n// }\r\n\r\n// export default SignUp;\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#003f5c',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n//   logo: {\r\n//     fontWeight: \"bold\",\r\n//     fontSize: 50,\r\n//     color: \"#fb5b5a\",\r\n//     marginBottom: 40\r\n//   },\r\n//   inputView: {\r\n//     width: \"80%\",\r\n//     backgroundColor: \"#465881\",\r\n//     borderRadius: 25,\r\n//     height: 50,\r\n//     marginBottom: 20,\r\n//     justifyContent: \"center\",\r\n//     padding: 20\r\n//   },\r\n//   inputText: {\r\n//     height: 50,\r\n//     color: \"white\"\r\n//   },\r\n//   forgot: {\r\n//     color: \"white\",\r\n//     fontSize: 11\r\n//   },\r\n//   loginBtn: {\r\n//     width: \"80%\",\r\n//     backgroundColor: \"#fb5b5a\",\r\n//     borderRadius: 25,\r\n//     height: 50,\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//     marginTop: 40,\r\n//     marginBottom: 10\r\n//   },\r\n//   loginText: {\r\n//     color: \"white\"\r\n//   }\r\n// });"]},"metadata":{},"sourceType":"module"}